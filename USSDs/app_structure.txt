# USSD CODE MANAGER APP - STRUCTURE & DESIGN DOCUMENT

## 1. APP ARCHITECTURE

### 1.1 Folder Structure
```
/src
  /assets            # Images, logos, and static resources
    /screenshots     # App screenshots for documentation
  /components        # Reusable UI components
    /common          # Buttons, cards, etc.
    /AppHeader       # Header component
    /NoDataView      # Empty state component
  /screens           # Main app screens
    HomeScreen       # Main dashboard with recent activity
    CategoryScreen   # Category detail view
    AllCodesScreen   # Hierarchical view of all codes
    CodeDetailScreen # Details for a specific code
    CodeExecutionScreen # Execute USSD codes
    CustomCodesScreen # Manage custom codes
    CustomCodeCreatorScreen # Create/edit custom codes
    EmergencyServicesScreen # Access emergency numbers
    FavoritesScreen  # View favorite and recent codes
    SettingsScreen   # App settings and preferences
    PrivacyPolicyScreen # Privacy policy information
  /navigation        # Navigation configuration
    AppNavigator     # Main navigation setup with tabs
  /services          # App services
    StorageService   # Data storage service
  /utils             # Helper functions
    recentActivityStorage # Recent activity management
    storageUtils     # Storage utilities
    ussdCodesUtils   # USSD code utilities
  /theme             # Colors, typography, and global styles
    ThemeContext     # Theme provider with light/dark mode
    theme            # Theme definitions
  /data              # Static data
    emergencyServices.json # Emergency services data
```

### 1.2 Data Models
```
- RecentActivity
  - code: string
  - description: string
  - time: string
  - status: 'Success' | 'Failed'
  - timestamp: number

- CustomCode
  - id: string
  - code: string
  - name: string
  - description: string
  - category: string
  - subcategory: string
  - createdAt: number
  - updatedAt: number

- SavedCode
  - code: string
  - description: string
  - category: string
  - timestamp: number

- EmergencyService
  - country: string
  - iso: string
  - primary: string
  - police?: string
  - ambulance?: string
  - fire?: string
  - notes?: string
```

## 2. FEATURES & FUNCTIONALITY

### 2.1 Core Features
1. **USSD Code Management**
   - Browse codes by category and subcategory
   - Save favorite codes for quick access
   - Create custom codes with descriptions
   - View recent activity history

2. **Code Execution**
   - Execute USSD codes directly from the app
   - Handle parameters in codes (e.g., phone numbers)
   - Track execution status (success/failure)
   - Save execution history

3. **Emergency Services**
   - Access emergency numbers by country
   - Quick-dial emergency services
   - Location-aware emergency contacts
   - Optimized for performance with large datasets

4. **User Preferences**
   - Light/dark theme toggle
   - Clear history option
   - View device information
   - Privacy policy access

### 2.2 Navigation Structure
```
- Bottom Tabs
  - Home (Main dashboard)
  - Codes (All codes organized hierarchically)
  - My Codes (Custom and favorite codes)
  - Settings (App preferences)

- Stack Navigation
  - Main Tabs
  - Category Screen
  - Code Detail Screen
  - Code Execution Screen
  - Emergency Services Screen
  - Custom Code Creator Screen
  - Privacy Policy Screen
```

## 3. USER INTERFACE DESIGN

### 3.1 Design Principles
1. **Simplicity**: Clean, uncluttered interfaces
2. **Consistency**: Uniform design patterns across screens
3. **Accessibility**: High contrast, readable text
4. **Responsiveness**: Adapts to different screen sizes
5. **Feedback**: Clear visual feedback for user actions

### 3.2 UI Components
1. **Cards**: For categories, codes, and recent activities
2. **Bottom Navigation**: For main app sections
3. **Headers**: Consistent headers with back navigation
4. **Action Buttons**: Primary actions highlighted
5. **Search Bar**: For finding specific codes
6. **Toggle Switches**: For settings options
7. **Alert Dialogs**: For confirmations and information

### 3.3 Theme Support
- Light and dark mode themes
- Adaptive status bar that changes with theme
- Consistent color palette across themes
- Smooth transitions between theme modes

## 4. DATA MANAGEMENT

### 4.1 Local Storage
- AsyncStorage for persistent data
- Store user preferences
- Save custom codes
- Track recent activities
- Manage favorites

### 4.2 State Management
- React Context for theme management
- Local component state for UI interactions
- Navigation state for screen transitions

### 4.3 Performance Considerations
- Memoization for expensive calculations
- FlatList with virtualization for long lists
- Lazy loading of components
- Optimized rendering for large datasets

## 5. USER FLOWS

### 5.1 Main User Flows
1. Home Dashboard → Category → Code Detail → Code Execution
2. Home Dashboard → Emergency Services → Call Emergency Number
3. Codes Tab → Browse Categories → View Code → Execute Code
4. My Codes Tab → Create Custom Code → Save Code
5. Settings → Toggle Theme → View Updated UI

### 5.2 Key Interactions
1. Executing a USSD code
2. Creating a custom code
3. Adding/removing favorites
4. Clearing history
5. Switching between light/dark modes
